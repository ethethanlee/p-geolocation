{"ast":null,"code":"var _jsxFileName = \"/Users/ethanlee/Developer/p-geolocation/frontend/src/pages/HomePage.js\";\nimport React, { Component } from 'react';\nimport { MapComponent } from '../mapcomponent'; // Adjust the path as needed\nimport Button from '@mui/material/Button';\n\n// const Overlay = () => {\n//   const overlayStyle = {\n//     position: 'fixed',\n//     top: '64px',\n//     left: 0,\n//     width: '100%',\n//     height: 'calc(100% - 64px)',\n//     backgroundColor: 'rgba(0, 0, 0, 0.2)',\n//     zIndex: 0,\n//   };\n//   return <div style={overlayStyle}></div>;\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.onFileChange = async event => {\n      const files = event.target.files;\n      if (files.length === 2) {\n        this.setState({\n          selectedFiles: files\n        });\n      } else {\n        alert('Please select exactly two files.');\n        event.target.value = null; // Reset the file input\n      }\n\n      // const { selectedFiles } = this.state;\n\n      console.log('starting...');\n\n      // if (selectedFiles.length !== 2) {\n      //   alert('Please select exactly two files before uploading.');\n      //   return;\n      // }\n\n      try {\n        const formData = new FormData();\n        for (let i = 0; i < files.length; i++) {\n          formData.append(`myFiles[${i}]`, files[i], files[i].name);\n        }\n        console.log('a');\n        console.log(files.length);\n        // defining two image file names to use for parameter\n        const locationInput = files[0].name;\n        const locationInput2 = files[1].name;\n        console.log('b');\n        // route\n        const url = `http://127.0.0.1:5000/sun_data_route/${locationInput}/${locationInput2}`;\n        console.log(url);\n        const response = await fetch(url, {\n          method: 'POST',\n          body: formData //DONT FORGET TO CHANGE THIS BACK TO NOT A STRING \n        });\n        if (response.ok) {\n          const responseData = await response.json();\n          console.log('Response from Flask:', responseData);\n          // Handle response data as needed\n          this.setState({\n            latitude: responseData.latitude,\n            longitude: responseData.longitude,\n            showMap: true\n          });\n        } else {\n          throw new Error('Failed to send data to Flask');\n        }\n      } catch (error) {\n        alert('Error while sending data to Flask:', error);\n        // Handle error\n      }\n    };\n    this.state = {\n      showMap: false,\n      selectedFiles: [],\n      latitude: 0,\n      longitude: 0\n    };\n  }\n  render() {\n    const fileInputStyle = {\n      display: 'none'\n    };\n    const centerContainerStyle = {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh' // Ensures full viewport height\n    };\n    const boxStyle = {\n      backgroundColor: '#76ABDF',\n      borderRadius: '20px',\n      padding: '20px'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: centerContainerStyle,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: boxStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingLeft: '20px',\n              fontFamily: 'Poppins, sans-serif',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              s: true,\n              children: \"Welcome to p-geolocation!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload two images of the sun!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              component: \"label\",\n              htmlFor: \"fileInput\",\n              sx: {\n                backgroundColor: '#FFFFFF',\n                color: 'black',\n                padding: '10px 20px',\n                borderRadius: '50px',\n                textTransform: 'uppercase',\n                fontWeight: 'bold',\n                '&:hover': {\n                  backgroundColor: '#DADEDF'\n                }\n              },\n              children: [\"Upload Two Images\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"fileInput\",\n                type: \"file\",\n                accept: \"image/*\",\n                multiple: true,\n                style: fileInputStyle,\n                onChange: this.onFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 11\n            }, this), this.state.showMap && /*#__PURE__*/_jsxDEV(MapComponent, {\n              coordinates: [this.state.latitude, this.state.longitude]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// export default HomePage;","map":{"version":3,"names":["React","Component","MapComponent","Button","jsxDEV","_jsxDEV","HomePage","constructor","props","onFileChange","event","files","target","length","setState","selectedFiles","alert","value","console","log","formData","FormData","i","append","name","locationInput","locationInput2","url","response","fetch","method","body","ok","responseData","json","latitude","longitude","showMap","Error","error","state","render","fileInputStyle","display","centerContainerStyle","justifyContent","alignItems","minHeight","boxStyle","backgroundColor","borderRadius","padding","style","children","position","textAlign","paddingLeft","fontFamily","color","s","fileName","_jsxFileName","lineNumber","columnNumber","component","htmlFor","sx","textTransform","fontWeight","id","type","accept","multiple","onChange","coordinates"],"sources":["/Users/ethanlee/Developer/p-geolocation/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { MapComponent } from '../mapcomponent'; // Adjust the path as needed\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n// const Overlay = () => {\r\n//   const overlayStyle = {\r\n//     position: 'fixed',\r\n//     top: '64px',\r\n//     left: 0,\r\n//     width: '100%',\r\n//     height: 'calc(100% - 64px)',\r\n//     backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n//     zIndex: 0,\r\n//   };\r\n//   return <div style={overlayStyle}></div>;\r\n// };\r\n\r\nexport class HomePage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMap: false,\r\n      selectedFiles: [],\r\n      latitude: 0,\r\n      longitude: 0,\r\n    };\r\n\r\n  }\r\n\r\n  onFileChange = async (event) => {\r\n    const files = event.target.files;\r\n    if (files.length === 2) {\r\n      this.setState({ selectedFiles: files });\r\n    } else {\r\n      alert('Please select exactly two files.');\r\n      event.target.value = null; // Reset the file input\r\n    } \r\n\r\n    // const { selectedFiles } = this.state;\r\n\r\n    console.log('starting...');\r\n\r\n    // if (selectedFiles.length !== 2) {\r\n    //   alert('Please select exactly two files before uploading.');\r\n    //   return;\r\n    // }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      for (let i = 0; i < files.length; i++) {\r\n        formData.append(`myFiles[${i}]`, files[i], files[i].name);\r\n      }\r\n\r\n      console.log('a')\r\n      console.log(files.length)\r\n      // defining two image file names to use for parameter\r\n      const locationInput = files[0].name;\r\n      const locationInput2 = files[1].name;\r\n\r\n      console.log('b')\r\n      // route\r\n      const url = `http://127.0.0.1:5000/sun_data_route/${locationInput}/${locationInput2}`;\r\n      console.log(url)\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: formData, //DONT FORGET TO CHANGE THIS BACK TO NOT A STRING \r\n      });\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        console.log('Response from Flask:', responseData);\r\n        // Handle response data as needed\r\n        this.setState({\r\n          latitude: responseData.latitude,\r\n          longitude: responseData.longitude,\r\n          showMap: true,\r\n        })\r\n\r\n      } else {\r\n        throw new Error('Failed to send data to Flask');\r\n      }\r\n    } catch (error) {\r\n      alert('Error while sending data to Flask:', error);\r\n      // Handle error\r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const fileInputStyle = {\r\n      display: 'none',\r\n    }\r\n\r\n    const centerContainerStyle = {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      minHeight: '100vh', // Ensures full viewport height\r\n    };\r\n\r\n    const boxStyle = {\r\n      backgroundColor: '#76ABDF',\r\n      borderRadius: '20px',\r\n      padding: '20px',\r\n      \r\n    };\r\n\r\n    return (\r\n      <div style={centerContainerStyle} > <div style={boxStyle}>\r\n        <div style={{ position: 'relative', textAlign: 'center' }}>\r\n        <div style={{ paddingLeft: '20px', fontFamily: 'Poppins, sans-serif', color: 'white'}}>\r\n          <h1 s>Welcome to p-geolocation!</h1>\r\n          <p>Upload two images of the sun!</p>\r\n          <Button\r\n            component=\"label\"\r\n            htmlFor=\"fileInput\"\r\n            sx={{\r\n              backgroundColor: '#FFFFFF',\r\n              color: 'black',\r\n              padding: '10px 20px',\r\n              borderRadius: '50px',\r\n              textTransform: 'uppercase',\r\n              fontWeight: 'bold',\r\n              '&:hover': {\r\n                backgroundColor: '#DADEDF',\r\n              },\r\n            }}\r\n          >\r\n            Upload Two Images\r\n            <input\r\n              id=\"fileInput\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              style={fileInputStyle}\r\n              onChange={this.onFileChange}\r\n            />\r\n          </Button>\r\n\r\n          {/* {coordinates && (\r\n            <div>\r\n              <p>Latitude: {coordinates.longitude}</p>\r\n              <p>Longitude: {coordinates.latitude}</p>\r\n            </div>\r\n          )} */}\r\n\r\n          {/* <button onClick={clickMap}>Show Map</button> */}\r\n\r\n          {this.state.showMap && <MapComponent coordinates={[this.state.latitude, this.state.longitude]} />}\r\n        </div></div>\r\n        </div></div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default HomePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}