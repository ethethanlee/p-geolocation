{"ast":null,"code":"var _jsxFileName = \"/Users/ethanlee/Developer/p-geolocation/frontend/src/pages/HomePage.js\";\nimport React, { Component } from 'react';\nimport { MapComponent } from '../mapcomponent'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.onFileUpload = async () => {\n      const {\n        selectedFiles\n      } = this.state;\n      console.log('starting...');\n      if (selectedFiles.length !== 2) {\n        alert('Please select exactly two files before uploading.');\n        return;\n      }\n      try {\n        const formData = new FormData();\n        for (let i = 0; i < selectedFiles.length; i++) {\n          formData.append(`myFiles[${i}]`, selectedFiles[i], selectedFiles[i].name);\n        }\n\n        // defining two image file names to use for parameter\n        const locationInput = selectedFiles[0].name;\n        const locationInput2 = selectedFiles[1].name;\n\n        // route\n        const url = `http://127.0.0.1:5000/sun_data_route/${locationInput}/${locationInput2}`;\n        const response = await fetch(url, {\n          method: 'POST',\n          body: formData //DONT FORGET TO CHANGE THIS BACK TO NOT A STRING \n        });\n        if (response.ok) {\n          const responseData = await response.json();\n          console.log('Response from Flask:', responseData);\n          // Handle response data as needed\n        } else {\n          throw new Error('Failed to send data to Flask');\n        }\n      } catch (error) {\n        console.error('Error while sending data to Flask:', error);\n        // Handle error\n      }\n\n      // fetch(`http://127.0.0.1:3000/sun_data_route/${encodeURIComponent(locationInput)}`)\n      //   .then(response => response.json())\n      //   .then(data => {\n      //     this.setState({ coordinates: data, showMap: true });\n      //   })\n      //   .catch(error => {\n      //     console.error('Error!!!:', error);\n      //   });\n      // console.log('Fetching data...');\n    };\n    this.state = {\n      showMap: false,\n      selectedFiles: []\n    };\n  }\n  render() {\n    const {\n      coordinates,\n      showMap,\n      onFileChange,\n      clickMap\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to p-geolocation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onFileUpload,\n        children: \"Upload Two Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), coordinates && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Latitude: \", coordinates.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Longitude: \", coordinates.latitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickMap,\n        children: \"Show Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), showMap && /*#__PURE__*/_jsxDEV(MapComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// export default HomePage;","map":{"version":3,"names":["React","Component","MapComponent","jsxDEV","_jsxDEV","HomePage","constructor","props","onFileUpload","selectedFiles","state","console","log","length","alert","formData","FormData","i","append","name","locationInput","locationInput2","url","response","fetch","method","body","ok","responseData","json","Error","error","showMap","render","coordinates","onFileChange","clickMap","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","multiple","onChange","onClick","longitude","latitude"],"sources":["/Users/ethanlee/Developer/p-geolocation/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { MapComponent } from '../mapcomponent'; // Adjust the path as needed\r\n\r\nexport class HomePage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMap: false,\r\n      selectedFiles: [],\r\n    };\r\n\r\n  }\r\n\r\n  onFileUpload = async () => {\r\n    const { selectedFiles } = this.state;\r\n\r\n    console.log('starting...');\r\n\r\n    if (selectedFiles.length !== 2) {\r\n      alert('Please select exactly two files before uploading.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      for (let i = 0; i < selectedFiles.length; i++) {\r\n        formData.append(`myFiles[${i}]`, selectedFiles[i], selectedFiles[i].name);\r\n      }\r\n\r\n      // defining two image file names to use for parameter\r\n      const locationInput = selectedFiles[0].name;\r\n      const locationInput2 = selectedFiles[1].name;\r\n\r\n      // route\r\n      const url = `http://127.0.0.1:5000/sun_data_route/${locationInput}/${locationInput2}`;\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: formData, //DONT FORGET TO CHANGE THIS BACK TO NOT A STRING \r\n      });\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        console.log('Response from Flask:', responseData);\r\n        // Handle response data as needed\r\n      } else {\r\n        throw new Error('Failed to send data to Flask');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error while sending data to Flask:', error);\r\n      // Handle error\r\n    }\r\n\r\n\r\n    // fetch(`http://127.0.0.1:3000/sun_data_route/${encodeURIComponent(locationInput)}`)\r\n    //   .then(response => response.json())\r\n    //   .then(data => {\r\n    //     this.setState({ coordinates: data, showMap: true });\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.error('Error!!!:', error);\r\n    //   });\r\n    // console.log('Fetching data...');\r\n  };\r\n\r\n  render() {\r\n    const { coordinates, showMap, onFileChange, clickMap } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Home</h1>\r\n        <p>Welcome to p-geolocation!</p>\r\n        <label>\r\n        </label>\r\n        <input type=\"file\" accept=\"image/*\" multiple onChange={onFileChange}/>\r\n        <button onClick={this.onFileUpload}>Upload Two Images</button>\r\n\r\n        {coordinates && (\r\n          <div>\r\n            <p>Latitude: {coordinates.longitude}</p>\r\n            <p>Longitude: {coordinates.latitude}</p>\r\n          </div>\r\n        )}\r\n\r\n        <button onClick={clickMap}>Show Map</button>\r\n\r\n        {showMap && <MapComponent />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default HomePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}